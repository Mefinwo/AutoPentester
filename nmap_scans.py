import os
import sys
import nmap
import argparse

def run_scans(target, lookup=False):
    if os.geteuid() != 0:
        print("Some parts of this program requires root privileges. Please run the script as root using 'sudo'.")
        sys.exit(1)
    
    nm = nmap.PortScanner()
    print(f"Starting scans on {target}")

    if lookup:
        # Basic TCP scan
        print("\nRunning basic TCP scan...")
        nm.scan(target, '1-1024')
        print_scan_results(nm)

        # Service detection scan
        print("\nRunning service detection scan...")
        nm.scan(target, '1-1024', arguments='-sV')
        print_scan_results(nm, service_scan=True)

        # OS detection scan
        print("\nRunning OS detection scan...")
        nm.scan(target, arguments='-O')
        print_scan_results(nm, os_scan=True)
    else:
        print("No argument given, no actions performed.")

def print_scan_results(nm, service_scan=False, os_scan=False):
    for host in nm.all_hosts():
        print(f'Host : {host} ({nm[host].hostname()})')
        print(f'State : {nm[host].state()}')
        
        if os_scan:
            if 'osclass' in nm[host]:
                for osclass in nm[host]['osclass']:
                    print(f"OS Type : {osclass['type']}")
                    print(f"OS Vendor : {osclass['vendor']}")
                    print(f"OS Family : {osclass['osfamily']}")
                    print(f"OS Generation : {osclass['osgen']}")
                    print(f"OS Accuracy : {osclass['accuracy']}%")
                print('----------')  
            else:
                print("OS detection was not successful.")
                continue     

        for proto in nm[host].all_protocols():
            print(f'----------')
            print(f'Protocol : {proto}')
            lport = nm[host][proto].keys()
            sorted_ports = sorted(lport)
            for port in sorted_ports:
                port_info = f'port : {port}'
                
                if not service_scan and not os_scan:
                    port_state = nm[host][proto][port]['state']
                    port_info += f'\tstate : {port_state}'
                
                if service_scan and 'product' in nm[host][proto][port]:
                    product = nm[host][proto][port].get('product', '')
                    version = nm[host][proto][port].get('version', '')
                    extrainfo = nm[host][proto][port].get('extrainfo', '')
                    service_details = f"{product} {version} {extrainfo}".strip()
                    port_info += f'\tService: {service_details}'
                
                print(port_info)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Run various Nmap scans on a specified target")
    parser.add_argument("target", help="IP address or hostname of the target to scan")
    parser.add_argument("-lu", "--lookup", help="Perform lookup with three types of scans", action="store_true")
    args = parser.parse_args()
    run_scans(args.target, args.lookup)
